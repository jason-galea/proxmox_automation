---
- name: Set SSH host
  hosts: prox
  gather_facts: false
  vars:
    use_ip_not_dns_name: true
  roles:
    - get-ssh-host


- name: Configure Proxmox
  hosts: prox
  gather_facts: false
  tasks:

    ### Get host
    - name: Include role 'get-ssh-host'
      vars:
        use_ip_not_dns_name: true
      ansible.builtin.include_role:
        name: get-ssh-host


    ### SSH
    - name: Include role 'ssh' with tasks to remove/create/scan/install an SSH key
      loop:
        - remove
        - create
        - scan
        - install
      ansible.builtin.include_role:
        name: ssh
        tasks_from: "{{ item }}"


    ### Non-subscription repo
    - name: Detect debian version nickname
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          cat /etc/apt/sources.list | head -n1 | awk '{print $3}'
        executable: /bin/bash
      register: debian_version_nickname_result
      changed_when: debian_version_nickname_result != 0

    # - name: "DEBUG: Show debian version nickname"
    #   ansible.builtin.debug:
    #     var: debian_version_nickname_result.stdout

    - name: Add non-subscription repo
      vars:
        debian_nickname: "{{ debian_version_nickname_result.stdout }}"
      ansible.builtin.template:
        src: "templates/sources.list.j2"
        dest: "/etc/apt/sources.list"
        owner: root
        group: root
        mode: "644"

    - name: Disable enterprise repo list
      vars:
        debian_nickname: "{{ debian_version_nickname_result.stdout }}"
      ansible.builtin.template:
        src: "templates/pve-enterprise.list.j2"
        dest: "/etc/apt/sources.list.d/pve-enterprise.list"
        owner: root
        group: root
        mode: "644"

    - name: Update & upgrade
      ansible.builtin.apt:
        upgrade: true
        update_cache: true
      register: apt_upgrade_result

    # - name: "DEBUG: Show apt upgrade output"
    #   ansible.builtin.debug:
    #     var: apt_upgrade_result.stdout_lines
    #   # when: apt_upgrade_result.stdout_lines is defined


    - name: Update PVEAM
      ansible.builtin.command: "pveam update"
      register: pveam_update
      changed_when: pveam_update != 0

    # - name: "DEBUG: Show PVEAM update output"
    #   ansible.builtin.debug:
    #     var: pveam_update.stdout_lines
    #   when: pveam_update.stdout_lines is defined


    ### MISC
    - name: "MISC: Reduce grub boot delay to 2 seconds"
      ansible.builtin.lineinfile:
        path: /etc/default/grub
        regexp: '^GRUB_TIMEOUT=5'
        line: 'GRUB_TIMEOUT=2'

    - name: "MISC: Regenerate grub config"
      ansible.builtin.command: "update-grub"
      register: update_grub
      changed_when: update_grub.rc != 0

    - name: "MISC: Disable lid-close actions"
      loop:
        - { regexp: '^#HandleLidSwitch=suspend', line: 'HandleLidSwitch=ignore' }
        - { regexp: '^#HandleLidSwitchExternalPower=suspend', line: 'HandleLidSwitchExternalPower=ignore' }
        - { regexp: '^#HandleLidSwitchDocked=ignore', line: 'HandleLidSwitchDocked=ignore' }
      ansible.builtin.lineinfile:
        path: /etc/systemd/logind.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"

    - name: "MISC: Disable terminal beep"
      ansible.builtin.lineinfile:
        path: /etc/inputrc
        regexp: "^# set bell-style none"
        line: "set bell-style none"

    # - name: "MISC: Restart Proxmox to apply changes"
    #   ansible.builtin.reboot:


    ### END
    - name: Include role 'verify_webserver'
      ansible.builtin.include_role:
        name: verify_webserver
