---
- ansible.builtin.import_playbook: get_localhost_sudo_password.yml


- name: Set SSH host(s)
  hosts: prox, pihole
  gather_facts: false
  vars:
    use_ip_not_dns_name: true
  roles:
    - get_ssh_host


- name: Create Pihole container & install
  hosts: pihole
  gather_facts: false
  tasks:

    - name: Include role 'prox_lxc'
      ansible.builtin.include_role:
        name: prox_lxc

    - name: Include role 'pihole'
      ansible.builtin.include_role:
        name: pihole


- name: Migrate localhost & container to new DNS server
  hosts: localhost, prox
  gather_facts: false
  tasks:

    ### NOTE: Vars 'domain' and 'dns' are set in the inventory
    - name: Include role 'pihole' with tasks from 'update_resolv_conf'
      ansible.builtin.include_role:
        name: pihole
        tasks_from: update_resolv_conf

    - name: Verify A records
      loop: "{{ groups['all'] }}"
      ansible.builtin.command: nslookup {{ hostvars[item].fqdn }}
      register: verify_a_records
      changed_when: verify_a_records.rc != 0
      failed_when: verify_a_records.rc != 0

    - name: Verify CNAME records
      loop: "{{ groups['all'] }}"
      ansible.builtin.command: nslookup {{ hostvars[item].cname }}
      register: verify_cname_records
      changed_when: verify_cname_records.rc != 0
      failed_when: verify_cname_records.rc != 0
      when: hostvars[item].cname is defined


- name: Verify SSH connection to Proxmox with DNS name
  hosts: prox
  gather_facts: false
  tasks:

    - name: Set Proxmox SSH host to DNS name
      ansible.builtin.include_role:
        name: get_ssh_host

    - name: Run dummy command 'id'
      ansible.builtin.command: id
      register: id_result
      changed_when: id_result.rc != 0

    - name: Show dummy command output
      ansible.builtin.debug:
        var: id_result.stdout
