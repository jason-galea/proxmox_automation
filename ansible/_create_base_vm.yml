---
- name: Create base VM template
  hosts: base-vm
  gather_facts: false
  tasks:

    - name: Check if base-vm is already a template
      vars: ### NOTE: Workaround, only required when container isn't online
        ansible_ssh_private_key_file: "{{ hostvars['prox'].ansible_ssh_private_key_file }}"
      delegate_to: prox
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          qm list | grep {{ id }}
        executable: /bin/bash
      register: check_if_base_vm_exists
      changed_when: check_if_base_vm_exists.rc != 0
      failed_when: false ### Ignore failures, we just want the stdout


    - name: If base template does not exist
      when: check_if_base_vm_exists.stdout == ""
      block:


        ### Create --> Start --> Install packages
        - name: "Include role 'prox_kvm'"
          ansible.builtin.include_role:
            name: prox_kvm


        ### Template
        - name: Convert VM to template
          vars: ### NOTE: Workaround, only required when container isn't online
            ansible_ssh_private_key_file: "{{ hostvars['prox'].ansible_ssh_private_key_file }}"
          delegate_to: prox
          block:

            - name: Stop VM
              ansible.builtin.command: "qm stop {{ id }}"
              register: convert_base_vm_to_template
              changed_when: convert_base_vm_to_template.rc != 0

            - name: Remove network config
              ansible.builtin.command: "qm set {{ id }} --delete ipconfig0"
              register: remove_network_config
              changed_when: remove_network_config.rc != 0

            - name: Convert base VM to template
              ansible.builtin.command: "qm template {{ id }}"
              register: convert_base_vm_to_template
              changed_when: convert_base_vm_to_template.rc != 0
