---
  ### TODO: Convert this into a role???
- name: "Prepare Proxmox for SSH"
  hosts: localhost
  gather_facts: false
  vars:
    # host_to_configure: prox

    ### TODO: Move these vars into "set_facts" inside role
    prox_user: "{{ hostvars['prox'].ansible_user }}"
    prox_ip: "{{ hostvars['prox'].ansible_ssh_host }}"
    # prox_ip: 172.26.0.2
    # prox_user: root
  tasks:
    - name: "Remove old Proxmox key from localhost"
      ansible.builtin.command: "ssh-keygen -R {{ prox_ip }}"
      register: remove_old_prox_key_result
      changed_when: remove_old_prox_key_result != 0

    - name: "Authorise localhost key on Proxmox"
      ansible.builtin.command: |
        sshpass \
          -f ./../password.txt \
          ssh-copy-id \
            -o 'StrictHostKeyChecking no' \
            {{ prox_user }}@{{ prox_ip }}
      register: ssh_copy_id_result
      changed_when: ssh_copy_id_result != 0


- name: "Configure Proxmox"
  hosts: prox
  gather_facts: false
  tasks:
    - name: "DEBUG: Run 'id' command on Proxmox"
      ansible.builtin.command: "id"
      register: id_command_result
      changed_when: id_command_result != 0

    - name: "DEBUG: Show 'id' command output"
      ansible.builtin.debug:
        var: id_command_result

    # - name: "Verify DNS & internet via ping"
    #   command: "ping -c 3 example.com"
    #   register: ping
    # - debug:
    #     var: ping.stdout

    #   ### TODO: Use templates module
    # - name: "Add non-subscription repo"
    #   ### OPTION 1:
    #   # templates:
    #   #   path: ???
    #   ### OPTION 2:
    #   # vars:
    #   #   apt_sources: "/etc/apt/sources.list"
    #   # shell: |
    #   #   echo '' >> {{ apt_sources }}
    #   #   echo '# PVE pve-no-subscription repository provided by proxmox.com,' >> {{ apt_sources }}
    #   #   echo '# NOT recommended for production use' >> {{ apt_sources }}
    #   #   echo 'deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription' >> {{ apt_sources }}
    #   ### OPTION 3:
    #   shell: echo '{{ item }}' >> /etc/apt/sources.list
    #   with_items:
    #   - ''
    #   - '# PVE pve-no-subscription repository provided by proxmox.com,'
    #   - '# NOT recommended for production use'
    #   - 'deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription'

    # - name: "Disable enterprise repo"
    #   file:
    #     path: "/etc/apt/sources.list.d/pve-enterprise.list"
    #     state: absent

    # - name: "Update & upgrade"
    #   apt:
    #     upgrade: yes
    #     update_cache: yes
    #   register: update
    # - debug:
    #     var: update.stdout
    #   when: update.stdout is defined

    #   ### Download most recent ubuntu CT template
    # - name: "Update PVEAM"
    #   command: "pveam update"
    #   register: pveam_update
    # - debug:
    #     var: pveam_update.stdout
    #   when: pveam_update.stdout is defined

    # - name: "Find most recent ubuntu CT template"
    #   shell: "pveam available | grep ubuntu | awk '{print $2}' | sort | tail -n 1"
    #   register: ubuntu_ct
    # - debug:
    #     var: ubuntu_ct.stdout
    #   when: ubuntu_ct.stdout is defined

    # - name: "Download most recent ubuntu CT template"
    #   command: "pveam download local {{ ubuntu_ct.stdout }}"
    #   register: pveam_download
    # - debug:
    #     var: pveam_download.stdout
    #   when: pveam_download.stdout is defined

    # - name: "Verify webserver at https://{{ ansible_host }}:{{ port }}"
    #   wait_for:
    #     port: "{{ port }}"
    #     timeout: 10
