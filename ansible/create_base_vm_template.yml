---
- name: Create base VM
  hosts: base-vm
  gather_facts: false
  tasks:


    ### Download image
    - name: Check if cloud-init image already exists in Proxmox
      delegate_to: prox
      vars: ### NOTE: Workaround, only required when container isn't online
        ansible_ssh_private_key_file: "{{ hostvars['prox'].ansible_ssh_private_key_file }}"
      block:

        - name: "Get stats for cloud-init image on disk"
          ansible.builtin.stat:
            path: "{{ prox_iso_dir }}/{{ cloud_init_img }}"
          register: stat_cloud_init_image

        - name: "Download cloud-init image to Proxmox"
          ansible.builtin.get_url:
            url: "{{ cloud_init_img_url }}"
            dest: "{{ prox_iso_dir }}/{{ cloud_init_img }}"
            owner: root
            group: root
            mode: "644"
          when: not stat_cloud_init_image.stat.exists


    ### TODO: Check if VM already exists


    ### SSH
    - name: "Include role 'ssh' with tasks to remove/create an new SSH key"
      loop:
        - remove
        - create
      ansible.builtin.include_role:
        name: ssh
        tasks_from: "{{ item }}"


    ### Create
    - name: Create base VM template using Cloud-Init
      delegate_to: localhost
      community.general.proxmox_kvm:
        node: prox
        api_host: "{{ hostvars['prox'].ansible_ssh_host }}"
        api_user: root@pam
        api_password: "{{ lookup('file', password_file) }}"

        name: "{{ inventory_hostname }}"
        vmid: "{{ id }}"

        citype: nocloud
        ciuser: root
        sshkeys: "{{ lookup('file', ansible_ssh_public_key_file) }}"
        cores: 2
        memory: 2048
        # bios: ovmf
        # efidisk0:
        #   efitype: 4m
        #   format: raw
        #   pre_enrolled_keys: false
        #   storage: local-lvm
        # scsihw: virtio-scsi-pci
        # scsi:
        #   scsi0: local-lvm:0,import-from={{ prox_iso_dir }}/{{ cloud_init_img }}
        #   scsi2: local-lvm:cloudinit
        # bootdisk: scsi0
        ide:
          ide0: local-lvm:0,import-from={{ prox_iso_dir }}/{{ cloud_init_img }}
          ide2: local-lvm:cloudinit
        bootdisk: ide0
        net:
          net0: virtio,bridge=vmbr0
        ipconfig:
          ipconfig0: ip={{ ip }}/24,gw={{ gateway }}
        searchdomains: "{{ domain }}"
        machine: q35
        serial:
          serial0: socket
        vga: serial0
        template: true
