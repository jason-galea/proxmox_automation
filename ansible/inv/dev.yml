---

all:
  vars:
    ### Network settings
    # subnet: "YOUR_SUBNET_HERE"
    subnet: "10.1.1"
    ip: "{{ subnet }}.{{ id }}"
    # mask: "255.255.255.0"
    gateway: "{{ subnet }}.1"

    ### DNS settings
    domain: test.lan
    fqdn: "{{ inventory_hostname }}.{{ domain }}"
    dns: "{{ hostvars['pihole'].ip }}"

    ### Ansible vars
    ansible_ssh_host: "{{ ip }}"
    ansible_user: root
    ansible_ssh_private_key_file: ~/.ssh/prox_automation_{{ inventory_hostname }}
    ansible_ssh_public_key_file: "{{ ansible_ssh_private_key_file }}.pub"
    ansible_ssh_common_args: -o StrictHostKeyChecking=no

    ### Proxmox vars
    prox_base_template_dir: /var/lib/vz/template/cache
    prox_iso_dir: /var/lib/vz/template/iso

    ### Misc. vars
    repo_dir: "{{ inventory_dir | dirname | dirname }}"
    password_file: "{{ repo_dir }}/password.txt"

  hosts:
    prox:
      # id: "YOUR_HOST_IP_AFFIX_HERE"
      id: 240
      port: 8006

  children:
    cts:
      hosts:
        base-ct:
          id: 245
          # base_template: ubuntu-20.04-standard_20.04-1_amd64.tar.gz
          # base_template: ubuntu-21.10-standard_21.10-1_amd64.tar.zst
          # base_template: ubuntu-22.04-standard_22.04-1_amd64.tar.zst
          base_template: ubuntu-22.10-standard_22.10-1_amd64.tar.zst
          # base_template: alpine-3.15-default_20211202_amd64.tar.xz
          # required_packages: [git, curl, unzip, idn2, htop, tree]
          required_packages: [htop, tree]
        pihole:
          id: 241
          port: 80
          cname: "{{ domain }}"
          required_packages: [git]

    vms:
      hosts:
        base-vm:
          id: 250
          ubuntu_version: jammy ### 22.04 LTS
          cloud_init_img_url: https://cloud-images.ubuntu.com/{{ ubuntu_version }}/current/{{ ubuntu_version }}-server-cloudimg-amd64.img
          cloud_init_img: ubuntu-{{ cloud_init_img_url | basename }}
          # required_packages: [git, curl, unzip, idn2, htop, tree]
          required_packages: [htop, tree]
        portainer:
          id: 246
          port: 9443

    docker_containers:
      vars:
        ip: "{{ hostvars['portainer'].ip }}"
        ansible_ssh_private_key_file: "{{ hostvars['portainer'].ansible_ssh_private_key_file }}"
        ansible_ssh_public_key_file: "{{ hostvars['portainer'].ansible_ssh_public_key_file }}"

      hosts:
        scraper:
