---

all:
  vars:
    ### Network settings
    # subnet: "YOUR_SUBNET_HERE"
    subnet: "10.1.1"
    ip: "{{ subnet }}.{{ id }}"
    # mask: "255.255.255.0"
    gateway: "{{ subnet }}.1"

    ### DNS settings
    domain: test.lan
    fqdn: "{{ inventory_hostname }}.{{ domain }}"
    dns: "{{ hostvars['pihole'].ip }}"

    ### Ansible vars
    ansible_ssh_host: "{{ ip }}"
    ansible_user: root
    ansible_ssh_private_key_file: ~/.ssh/prox_automation_{{ inventory_hostname }}
    ansible_ssh_public_key_file: "{{ ansible_ssh_private_key_file }}.pub"
    ansible_ssh_common_args: -o StrictHostKeyChecking=no

    ### Proxmox vars
    prox_ct_template_dir: /var/lib/vz/template/cache
    # prox_iso_dir: /var/lib/vz/template/iso

    ### Misc. vars
    repo_dir: "{{ inventory_dir | dirname | dirname }}"
    password_file: "{{ repo_dir }}/password.txt"

  hosts:
    prox:
      # id: "YOUR_HOST_IP_AFFIX_HERE"
      id: 240
      port: 8006

  children:
    cts:
      vars:
        # ct_template: ubuntu-22.04-standard_22.04-1_amd64.tar.zst
        ct_template: ubuntu-22.10-standard_22.10-1_amd64.tar.zst

      hosts:
        # base-ct:
        #   id: 245
        #   # base_template: ubuntu-22.04-standard_22.04-1_amd64.tar.zst
        #   base_template: ubuntu-22.10-standard_22.10-1_amd64.tar.zst
        #   # base_template: alpine-3.15-default_20211202_amd64.tar.xz
        #   # apt_packages: [git, curl, unzip, idn2, htop, tree]
        #   apt_packages: [htop, tree]

        pihole:
          id: 241
          apt_packages: [git]
          port: 80
          cname: "{{ domain }}"

        squid-deb-proxy:
          id: 242
          apt_packages: [squid-deb-proxy]
          port: 8000

        portainer:
          id: 243
          # ct_template: ubuntu-22.10-standard_22.10-1_amd64.tar.zst
          ct_cores: 4
          ct_memory: 4096
          ct_swap: 512
          ct_disk: 16
          apt_packages: [docker.io, python3-pip]
          # apt_packages: [podman, podman-docker]
          pip_packages: [requests]
          ct_features:
            - nesting=1
          port: 9443

    # vms:
    #   hosts:
    #     base-vm:
    #       id: 250
    #       ubuntu_version: jammy ### 22.04 LTS
    #       cloud_init_img_url: https://cloud-images.ubuntu.com/{{ ubuntu_version }}/current/{{ ubuntu_version }}-server-cloudimg-amd64.img
    #       cloud_init_img: ubuntu-{{ cloud_init_img_url | basename }}
    #       # apt_packages: [git, curl, unzip, idn2, htop, tree]
    #       apt_packages: [htop, tree]
    #     portainer:
    #       id: 246
    #       # apt_packages: []
    #       port: 9443


    # docker_containers:
    #   vars:
    #     # ip: "{{ hostvars['portainer'].ip }}" ### Doesn't work, hmmm
    #     id: "{{ hostvars['portainer'].id }}"
    #     ansible_ssh_private_key_file: "{{ hostvars['portainer'].ansible_ssh_private_key_file }}"
    #     ansible_ssh_public_key_file: "{{ hostvars['portainer'].ansible_ssh_public_key_file }}"

    #   hosts:
    #     scraper:
    #       port: 80
