- name: "DEBUG: Show Chosen ISO"
  ansible.builtin.debug:
    var: chosen_iso

- name: "Check if chosen ISO exists locally"
  delegate_to: localhost
  ansible.builtin.stat:
    path: "{{ repo_dir }}/isos/{{ chosen_iso }}"
  register: check_local_iso
  failed_when: not check_local_iso.stat.exists

- name: "Upload ISO to Proxmox"
  ansible.builtin.copy:
    src: "isos/{{ chosen_iso }}"
    dest: "/var/lib/vz/template/iso/{{ chosen_iso }}"
    owner: root
    group: root
    mode: "644"


### Create VM
- name: "Create VM"
  delegate_to: localhost
  community.general.proxmox_kvm:
    api_host: "{{ hostvars['prox'].ansible_ssh_host }}"
    api_user: root@pam
    api_password: "{{ hostvars['prox'].password }}"

    name: "{{ inventory_hostname }}"
    vmid: "{{ id }}"

    node: prox
    state: present
    net:
      net0: "virtio,bridge=vmbr0"
    sockets: 1
    cores: 2
    memory: 512
    scsihw: virtio-scsi-single
    scsi:
      sata0: "local-lvm:32,format=raw"
    machine: q35
    ostype: l26
    bios: ovmf
    efidisk0:
      storage: local-lvm
      format: raw
      efitype: 4m
      pre_enrolled_keys: false
    onboot: true


### Start
- name: "Start VM"
  delegate_to: localhost
  community.general.proxmox_kvm:
    api_host: "{{ hostvars['prox'].ansible_ssh_host }}"
    api_user: root@pam
    api_password: "{{ hostvars['prox'].password }}"

    vmid: "{{ id }}"
    state: started

- name: "Wait 5 seconds to VM to start"
  ansible.builtin.pause:
    seconds: 5


### SSH
- name: "Add new SSH key to known hosts"
  delegate_to: localhost
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      ssh-keyscan -H {{ ansible_ssh_host }} >> ~/.ssh/known_hosts
    executable: /bin/bash
  register: add_to_known_hosts
  changed_when: add_to_known_hosts.rc != 0

- name: "DEBUG: Run 'id' command on new VM"
  ansible.builtin.command: "id"
  register: id_command_result
  changed_when: id_command_result != 0

- name: "DEBUG: Show 'id' command output"
  ansible.builtin.debug:
    var: id_command_result.stdout
