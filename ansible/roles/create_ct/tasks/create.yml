### Chose CT template
- name: "Chose CT template"
  when: inventory_hostname != "base"
  block:
    - name: "Discover base CT template name"
      delegate_to: prox
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          ls {{ template_dir }} | grep 'vzdump.*{{ hostvars['base'].id }}.*tar.zst' | head -n1
        executable: /bin/bash
      register: name
      changed_when: check_if_container_already_exists_result.rc != 0

    - name: "Save base CT template name as fact"
      ansible.builtin.set_fact:
        chosen_ct_template: "local:vztmpl/{{ name.stdout }}"

- name: "(base) Statically set Proxmox CT template to create base CT template from"
  ansible.builtin.set_fact:
    # chosen_ct_template: "local:vztmpl/ubuntu-20.04-standard_20.04-1_amd64.tar.gz"
    # chosen_ct_template: "local:vztmpl/ubuntu-21.10-standard_21.10-1_amd64.tar.zst"
    # chosen_ct_template: "local:vztmpl/ubuntu-22.04-standard_22.04-1_amd64.tar.zst"
    chosen_ct_template: "local:vztmpl/ubuntu-22.10-standard_22.10-1_amd64.tar.zst"
    # chosen_ct_template: "local:vztmpl/alpine-3.15-default_20211202_amd64.tar.xz"
  when: inventory_hostname == "base"

- name: "DEBUG: Show chosen CT template"
  ansible.builtin.debug:
    var: chosen_ct_template

# - name: "DEBUG: Show hostnames"
#   loop:
#     - ansible_hostname
#     - inventory_hostname
#   ansible.builtin.debug:
#     var: "{{ item }}"

### Create container
- name: "Create container"
  delegate_to: localhost
  community.general.proxmox:
    # proxmox_default_behavior: no_defaults

    api_host: "{{ hostvars['prox'].ansible_ssh_host }}"
    api_user: root@pam
    api_password: "{{ hostvars['prox'].password }}"

    vmid: "{{ id }}"

    node: prox
    state: present
    # netif: "{{ ct_netif }}"
    netif: '{"net0":"name=eth0,bridge=vmbr0,firewall=1,type=veth,ip={{ ansible_ssh_host }}/24,gw={{ gateway }}"}'
    ostemplate: "{{ chosen_ct_template }}"
    hostname: "{{ inventory_hostname }}"
    # password: "{{ hostvars['prox'].password }}"
    pubkey: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    cores: 2
    memory: 512 # MB
    swap: 100 # MB
    disk: 8 # GB
    storage: local-lvm
    # [DEPRECATION WARNING]: The default value `false` for the parameter "unprivileged" is deprecated and it will be
    # replaced with `true`. This feature will be removed from community.general in version 7.0.0. Deprecation warnings
    # can be disabled by setting deprecation_warnings=False in ansible.cfg.
    unprivileged: true
    onboot: true
    features:
      - nesting=1


# ### Custom configs
# - name: "Add custom LXC configs"
#   delegate_to: prox
#   loop: "{{ ct_custom_configs }}"
#   ansible.builtin.shell:
#     cmd: |
#       set -o pipefail
#       echo '{{ item }}' >> /etc/pve/lxc/{{ id }}.conf
#     executable: /bin/bash
#   register: add_custom_ct_configs_result
#   changed_when: add_custom_ct_configs_result.rc != 0
#   when: ct_custom_configs is defined


### Start
- name: "Start container"
  delegate_to: localhost
  community.general.proxmox:
    api_host: "{{ hostvars['prox'].ansible_ssh_host }}"
    api_user: root@pam
    api_password: "{{ hostvars['prox'].password }}"

    vmid: "{{ id }}"
    state: started

- name: "Wait 5 seconds to container to start"
  ansible.builtin.pause:
    seconds: 5


### Verify
### TODO: Fix warning
- name: "Verify container is online"
  delegate_to: localhost
  ansible.builtin.wait_for_connection:
    timeout: 5
# - name: "Verify container is online"
#   ansible.builtin.wait_for_connection:
#     port: 22
#     timeout: 5
#   retries: 3

# - name: "Install SSH in Alpine"
#   delegate_to: prox
#   loop:
#   - 'apk update'
#   - 'apk add openssh'
#   - 'rc-update add sshd'
#   - 'rc-status'
#   - '/etc/init.d/sshd start'
#   ansible.builtin.command: "pct exec {{ id }} {{ item }}"
#   when: (id == 200) and (distro == "alpine")
#   timeout: 5
#   retries: 5

- name: "Add new SSH key to known hosts"
  delegate_to: localhost
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      ssh-keyscan -H {{ ansible_ssh_host }} >> ~/.ssh/known_hosts
    executable: /bin/bash
  register: add_to_known_hosts
  changed_when: add_to_known_hosts.rc != 0

# - name: "DEBUG: Run 'id' command on new container"
#   ansible.builtin.command: "id"
#   register: id_command_result
#   changed_when: id_command_result != 0

# - name: "DEBUG: Show 'id' command output"
#   ansible.builtin.debug:
#     var: id_command_result.stdout
