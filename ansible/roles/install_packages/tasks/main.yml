### APT
- name: Install apt packages
  when: apt_packages is defined
  block:

    - name: Enable squid apt caching
      vars:
        squid_ip: "{{ hostvars['squid'].ip }}"
        squid_port: "{{ hostvars['squid'].port }}"
      ansible.builtin.copy:
        content: Acquire::http::Proxy "http://{{ squid_ip }}:{{ squid_port }}";
        dest: /etc/apt/apt.conf.d/00proxy
        owner: root
        group: root
        mode: "644"
      # when: check_if_apt_cache_online.stdout != "" ### When there IS a result
      # when: disable_apt_cache is not defined ### When explicitely set by author
      when: inventory_hostname != 'squid' ### Squid must always be installed first

    - name: Update apt mirrors
      ansible.builtin.replace:
        path: /etc/apt/sources.list
        regexp: http://archive.ubuntu.com
        replace: http://au.archive.ubuntu.com

    # - name: Reconfigure DPKG
    #   ansible.builtin.command: dpkg --configure -a
    #   register: dpkg_configure
    #   changed_when: dpkg_configure.rc != 0

    - name: Update apt package list
      ansible.builtin.apt:
        update_cache: true

    - name: Install apt packages
      ansible.builtin.apt:
        pkg: "{{ apt_packages }}"

    # - name: "Upgrade apt packages"
    #   ansible.builtin.apt:
    #     upgrade: true


### Pip
- name: Install pip packages
  when: pip_packages is defined
  block:

    - name: Find local python3 version
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          ls /usr/bin/python3.* | head -n1
        executable: /bin/bash
      register: local_python3_bin
      changed_when: local_python3_bin.rc != 0

    # - name: Set local python3 version as fact
    #   ansible.builtin.set_fact:
    #     local_python3_bin: "{{ local_python3_bin.stdout }}"

    - name: Upgrade pip
      ansible.builtin.command:
        "{{ local_python3_bin.stdout }} -m pip install -U pip setuptools wheel"
      register: upgrade_pip
      changed_when: upgrade_pip.rc != 0

    - name: Install pip packages
      ansible.builtin.pip:
        name: "{{ pip_packages }}"
