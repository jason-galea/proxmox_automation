---

### Workaround before DNS is active
- hosts: all
  gather_facts: no
  tasks:
  - set_fact:
      ansible_host: "{{ ip }}"


# - name: "Create apt cache container"

# - name: "Create container template"
#   hosts: template
#   roles:
#   - template
#   - create
#   - prepare
#   - install_packages # This would be made redundant by the base container template

- name: "Prepare pihole container"
  gather_facts: no
  hosts: dns_servers
  vars:
    ansible_user: root # Workaround before users have sudo
  roles:
  - create
  - prepare
  - install_packages # This COULD be made redundant by the base container template

- name: "Deploy pihole"
  import_playbook: "services/pihole.yml"

#################### DNS IS ASSUMED TO BE ACTIVE ####################

- hosts: all
  gather_facts: no
  tasks:
  - set_fact:
      ansible_host: "{{ fqdn }}"

- name: "Deploy services"
  gather_facts: no
  hosts: all_services
  vars:
    ansible_user: root # Workaround before users have sudo
  roles:
  - create
  - prepare
  # - install_packages # This COULD be made redundant by the base container template

### Importing playbooks drastically simplifies this file.
### Doing this remove 3 roles & 5-6 plays from this file, all relating to pihole
### This way "deploy.yml" remains a high-level overview of tasks
### The only downside is that playbooks in "playbook/" cannot use roles.
# - name: "Install Pihole"
#   import_playbook: "services/pihole.yml"
  # when: ??? # When pihole template doesn't exist.

### Template id = live id + 100
### $ pct
# - name: "Save pihole as template":
#   roles: ???
#   tasks: ???
#   when: ??? # When pihole template doesn't exist



### Swap prox_hosts group to using DNS names
# - name: "Use DNS names instead of IPs"
#   hosts: prox_hosts
#   tasks:
#   - set_facts:
#       ansible_host: "{{}}"

### Deploy other services using DNS names
# - import_playbook: "deploy/services/emby.yml"
# - import_playbook: "deploy/services/wekan.yml"
# - import_playbook: "deploy/services/pihole.yml"

### Confiure reverse proxy