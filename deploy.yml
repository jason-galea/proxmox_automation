---
# - import_playbook: "deploy/template.yml"
# - name: "Create container template"

- name: "Deploy containers"
  gather_facts: no
  hosts: prox_hosts
  vars:
    ansible_user: root # Workaround
  roles:
  - create
  - start_cts # TODO: Combine "start_cts" & "restart_cts"
  - prepare

- name: "Install Pihole"
  gather_facts: no
  hosts: pihole
  vars:
    repo_dir: "/home/{{ user }}/pihole"
    repo_script: "{{ repo_dir }}/automated\\ install/basic-install.sh"
    answers_dir: "/etc/pihole"
    answers_file: "{{ answers_dir }}/setupVars.conf"
  roles:
  - pihole

# - import_playbook: "actions/pihole_a_records.yml"
- name: "Add A records to Pihole"
  hosts: pihole
  gather_facts: no
  vars:
    a_records_file: /etc/pihole/custom.list
    cname_records_file: /etc/dnsmasq.d/05-pihole-custom-cname.conf
    resolv: /etc/resolv.conf
  roles:
  - a_records
  # - update_prox_dns ### TODO:
  - restart_cts
    ### ^^^ COMBINE THIS AND BELOW TASK!
    ### USE "with_items: {{ groups }}" --> ansible_host

- name: "Verify DNS resolution from containers"
  hosts: prox_hosts
  gather_facts: no
  tasks:
  - name: "Verify DNS from pihole" # Should be dig, whatever
    shell: "nslookup {{ fqdn }} {{ ct_dns }} | grep Name | awk '{print $2}'"
    register: verify
    failed_when: "verify.stdout != fqdn"


### Swap prox_hosts group to using DNS names
# - name: "Use DNS names instead of IPs"
#   hosts: prox_hosts
#   tasks:
#   - set_facts:
#       ansible_host: "{{}}"

### Deploy other services using DNS names
# - import_playbook: "deploy/services/emby.yml"
# - import_playbook: "deploy/services/wekan.yml"
# - import_playbook: "deploy/services/pihole.yml"