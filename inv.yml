all:
  vars: ### Globals
    network: 172.26.0
    gateway: "{{ network }}.1"
    domain: test.lan
    dns: "{{ hostvars['pihole'].ip }}" # This not used during creation
    inventory_dir: "{{ ansible_inventory_sources[0] | dirname }}" # SUPER useful
    password: "{{ lookup('file', inventory_dir + '/password.txt') }}"

    template_dir: "/var/lib/vz/template/cache/"
    resolv: "/etc/resolv.conf"

    ############################################################################
    ### TODO: SPLIT BASE PACKAGES --> REQUIRED PACKAGES & RESTRUCTURE deploy.yml
    base_packages: [ufw,git,curl,unzip,idn2,sqlite3,dns-root-data,netcat,lighttpd,php-common,php-cgi,php-sqlite3,php-xml,php-intl,php-json]

    ### Host specific
    # ip: "{{ network }}.{{ id }}" # This breaks localhost apparently?
    # fqdn: "{{ inventory_hostname }}.{{ domain }}"

    ### Prox
    prox_host: "{{ hostvars['prox'].ip }}"
    prox_user: root@pam
    prox_password: "{{ password }}"

    ### Ansible
    # ansible_host: "{{ ip }}" # This also breaks localhost

  children:
    hyperv_vms:
      hosts:
        opnsense:
          id: 1
          port: 80
        prox:
          id: 2
          port: 8006 # HTTPS
      vars:
        ansible_user: root

    templates:
      hosts:
        base:
          id: 100
          ct_ostemplate: "local:vztmpl/ubuntu-21.10-standard_21.10-1_amd64.tar.zst"
    infrastructure:
      hosts:
        pihole:
          id: 160
          port: 80
          additional_ports: [53]
        # proxy:
        #   id : 161
        # ca:
        #   id : 162
    services:
      hosts:
        # portainer:
        #   id: 170
        #   ct_cores: 4
        #   ct_memory: 2048
        #   ct_swap: 512
          # port: 80
        apache:
          id: 171
          port: 80
        # emby:
        #   id: 172
        #   ct_cores: 4
        #   ct_memory: 1024
        #   ct_swap: 512
        #   port: 8096 # HTTP
        #   # port: 8920 # HTTPS
        #   additional_ports: ["{{ port }}", 8920] # Expects "port" to be set per host
        # wekan:
        #   id: 173
        #   port: 3001
    vpn_services:
      hosts:
        # radarr:
        #   id: 181
        #   user: admin
        #   port: 7878

    all_hosts: # Purely for DNS, not actually executed against. Here we set FQDN & IP
      children:
        hyperv_vms:
        all_cts:
      vars:
        ### Networking
        ip: "{{ network }}.{{ id }}"
        fqdn: "{{ inventory_hostname }}.{{ domain }}"
        # additional_ports: [] # Expects to be set per host

        ### Ansible
        # ansible_host: "{{ ip }}"
        ansible_host: "{{ fqdn }}"

    all_services: # Excluding DNS servers
      children:
        services:
        vpn_services:

    all_cts: # Primary group, excluding Hyper-V VMs
      children:
        infrastructure:
        all_services:
        templates:
      vars: ### Default vars for all CTs
        user: "{{ inventory_hostname }}"
        # This ^^^ seems redundant, but if we use "inventory_hostname" in the playbook instead,
        # we are unable to change usernames on a per host basis.
        # For example, radarr/sonarr/lidarr do NOT want the user to be created in advance,
        # as they do it themselves during installation.
        # In that case the username cannot match the hostname.
        # port: 80 # Primary port, set per host

        ### CT Creation
        ct_node: prox
        ct_state: present
        ct_bridge: vmbr0
        ct_netif: '{"net0":"name=eth0,bridge={{ ct_bridge }},firewall=1,type=veth,ip={{ ip }}/24,gw={{ gateway }}"}'
        # ct_ostemplate: "{{ template_dir }}" # DISCOVERED AT RUN TIME
        ct_hostname: "{{ inventory_hostname }}"
        ct_password: "{{ password }}"
        ct_pubkey: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        ct_cores: 2
        ct_memory: 512 # MB
        ct_swap: 100 # MB
        ct_disk: 8 # GB
        ### TODO: Detect storage volume during "create" role
        ct_storage: local-lvm
        ct_unprivileged: yes
        ct_onboot: yes
        ct_features:
        - nesting=1

        # Default, to avoid errors in "packages" role
        # NOTE: This will be installed every "deploy", so keep it MINIMAL! 
        required_packages: [] 

        ### ANSIBLE
        ansible_user: "{{ inventory_hostname }}"
        
        