all:
  vars: ### Globals
    network: 172.26.0
    gateway: "{{ network }}.1"
    domain: test.lan
    dns: "{{ hostvars['pihole'].ip }}" # This not used during creation
    inventory_dir: "{{ ansible_inventory_sources[0] | dirname }}" # SUPER useful
    password: "{{ lookup('file', inventory_dir + '/../password.txt') }}"
    template_dir: "/var/lib/vz/template/cache/"
    resolv: "/etc/resolv.conf"
    # distro: "ubuntu"
    distro: "alpine"

    ### Prox
    prox_host: "{{ hostvars['prox'].ip }}"
    prox_user: root@pam
    prox_password: "{{ password }}"

    ### Networking
    # ip: "{{ network }}.{{ id }}"
    # fqdn: "{{ inventory_hostname }}.{{ domain }}"
    # additional_ports: [] # Expects to be set per host

    ### Ansible
    # ansible_host: "{{ ip }}" ### TODO: Confirm if this is causing problems, and fix
    # ansible_host: "{{ fqdn }}"


###################################################
  children:

    hyperv_vms:
      hosts:
        opnsense:
          id: 1
          port: 80
        prox:
          id: 2
          port: 8006 # HTTPS
          additional_ports:
          # - 5900...5999 # VNC Web console
          - 3128 # Spice proxy
          - 111 # rpcbind
          # - 25 # sendmail
          - 5404 # corosync
          - 5405 # corosync UDP
          # - 60000...60050 # live migration
      vars:
        # ansible_host: "{{ ip }}"
        ansible_user: root


###################################################
    templates:
      hosts:
        base:
          id: 200
          # ct_ostemplate: "local:vztmpl/ubuntu-20.04-standard_20.04-1_amd64.tar.gz"
          # ct_ostemplate: "local:vztmpl/ubuntu-21.10-standard_21.10-1_amd64.tar.zst"
          # ct_ostemplate: "local:vztmpl/ubuntu-22.04-standard_22.04-1_amd64.tar.zst"
          ct_ostemplate: "local:vztmpl/alpine-3.15-default_20211202_amd64.tar.xz"
          base_packages: [git,curl,unzip,idn2,htop,tree]


###################################################
    infrastructure:
      hosts:
        # pihole:
        #   id: 100
        #   port: 80
        #   additional_ports: [53]
        #   required_packages: [lighttpd,sqlite3,dns-root-data,netcat,php-common,php-cgi,php-sqlite3,php-xml,php-intl,php-json]
        # proxy:
        #   id : 101
        #   port: 80
        # openssl: # TODO: Choose a CA
        #   id : 102
        #   port: 80 # TODO: Confirm port


    services:
      hosts:
        # portainer:
        #   id: 120
        #   ct_cores: 4
        #   ct_memory: 2048
        #   ct_swap: 512
        #   port: 9443
        #   additional_ports: [8000] # TCP tunnel
        # apache:
        #   id: 121
        #   port: 80
        #   cname: "www.{{ domain }}"
        # emby:
        #   id: 122
        #   ct_cores: 4
        #   ct_memory: 1024
        #   ct_swap: 512
        #   port: 8096 # HTTP
        #   additional_ports: [8920] # HTTPS
        # wekan:
        #   id: 123
        #   port: 3001
        #   required_packages: [squashfuse, nginx, snapd]
        #   # ct_unprivileged: no
        #   ct_features:
        #   - fuse=1
        #   - mount=nfs
        #   - nesting=1
        #   ct_custom_configs:
        #   - "lxc.mount.entry = /dev/fuse dev/fuse none bind,create=file 0 0"
        # bookstack:
        #   id: 124
        #   port: 80
        scraper:
          id: 125
          # port: 80
          port: 5000
          ct_cores: 2
          ct_memory: 1024
          ct_swap: 100
          # required_packages: [apache2,php,libapache2-mod-php,python3-pip,firefox,firefox-geckodriver]
          # required_packages: [apache2,php,libapache2-mod-php,python3-pip,firefox]
          required_packages: [python3-pip,firefox,firefox-geckodriver]
          # additional_ports: [3306, 33060]
          # ct_features:
          # - fuse=1
          # - mount=nfs
          # - nesting=1
          # ct_custom_configs:
          # - "lxc.mount.entry = /dev/fuse dev/fuse none bind,create=file 0 0"


    vpn_services:
      hosts:
        # qbittorrent:
        #   id: 140
        #   # user: admin
        #   port: 8080
        # radarr:
        #   id: 141
        #   user: admin
        #   port: 7878
        # sonarr:
        #   id: 142
        #   user: admin
        #   port: 8989
        # lidarr:
        #   id: 143
        #   user: admin
        #   port: 8686
        # jackett:
        #   id: 144
        #   # user: admin
        #   port: 9117


    game_servers:
      hosts:
        # csgo:
        #   id: 160
        #   user: csgoserver
        #   port: 27015
        #   # additional_ports: [27020]
        #   additional_ports: [27005, 27020]
        # minecraft:
        #   id: 161
        #   port: 25565 
        #   additional_ports: [19132, 19133]
        # tmf:
        #   id: 162
        #   port: 2350
        #   additional_ports: [3450]


###################################################
    all_services: # Excluding infrastructure
      children:
        services:
        vpn_services:
        game_servers:


    all_cts: # Excluding hyperv_vms
      children:
        infrastructure:
        all_services:
        templates: # This is destroyed during the "backup" role
      vars: ### Default vars for all CTs
        user: "{{ inventory_hostname }}"
        # This ^^^ seems redundant, but if we use "inventory_hostname" in the playbook instead,
        # we are unable to change usernames on a per host basis.
        # For example, radarr/sonarr/lidarr do NOT want the user to be created in advance,
        # as they do it themselves during installation.
        # In that case the username cannot match the hostname.
        # port: 80 # Primary port, expects to be overwritten per host

        ### CT Creation
        ct_node: prox
        ct_state: present
        ct_bridge: vmbr0
        ct_netif: '{"net0":"name=eth0,bridge={{ ct_bridge }},firewall=1,type=veth,ip={{ ip }}/24,gw={{ gateway }}"}'
        # ct_ostemplate: "{{ template_dir }}" # DISCOVERED AT RUN TIME
        ct_hostname: "{{ inventory_hostname }}"
        ct_password: "{{ password }}"
        ct_pubkey: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        ct_cores: 2
        ct_memory: 512 # MB
        ct_swap: 100 # MB
        ct_disk: 8 # GB
        ### TODO: Detect storage volume during "create" role
        ct_storage: local-lvm
        ct_unprivileged: yes
        ct_onboot: yes
        ct_features:
        - nesting=1
        # ct_custom_configs: [] # Set per host

        # Default, to avoid errors in "packages" role
        # NOTE: This will be installed every "deploy", so keep it MINIMAL! 
        required_packages: [] 

        ### ANSIBLE
        ansible_host: "{{ ip }}"
        ansible_user: "{{ user }}"


###################################################
    all_but_localhost:
      children:
        hyperv_vms:
        all_cts:
      vars:
        ip: "{{ network }}.{{ id }}"
        fqdn: "{{ inventory_hostname }}.{{ domain }}"

        ### Ansible
        ansible_host: "{{ ip }}"
        
        