### Check
- name: "Check if container already exists"
  delegate_to: prox
  shell: "pct list | grep {{ id }} | grep running | cat"
  register: check

- block:

    ### Discover base template
  - block:
    - name: "Discover base template name"
      delegate_to: prox
      shell: "ls {{ template_dir }} | grep 'vzdump.*{{ hostvars['base'].id }}.*tar' | cat"
      register: name

    - set_fact:
        ct_ostemplate: "local:vztmpl/{{ name.stdout }}"

    # when: ct_ostemplate is not defined
    # when: ct_hostname != "base"
    when: id != 200

  - debug:
      var: ct_ostemplate

  ### Create
  - name: "Create containers"
    delegate_to: localhost
    proxmox:
      proxmox_default_behavior: no_defaults

      api_host: "{{ prox_host }}"
      api_user: "{{ prox_user }}"
      api_password: "{{ prox_password }}"

      vmid: "{{ id }}"

      node: "{{ ct_node }}"
      state: "{{ ct_state }}" 
      netif: "{{ ct_netif }}"
      ostemplate: "{{ ct_ostemplate }}"
      hostname: "{{ ct_hostname }}"
      password: "{{ ct_password }}"
      pubkey: "{{ ct_pubkey }}"
      cores: "{{ ct_cores }}"
      memory: "{{ ct_memory }}"
      swap: "{{ ct_swap }}"
      disk: "{{ ct_disk }}"
      storage: "{{ ct_storage }}"
      unprivileged: "{{ ct_unprivileged }}"
      onboot: "{{ ct_onboot }}"
      features: "{{ ct_features }}"
      

  ### Additional features
    # TODO: Replace with builtin
  - name: "Add custom LXC configs"
    delegate_to: prox
    shell: "echo '{{ config_line }}' >> /etc/pve/lxc/{{ id }}.conf"
    with_items: "{{ ct_custom_configs }}"
    loop_control:
      loop_var: config_line # Avoid warning
    when: ct_custom_configs is defined

  ### Start
  - name: "Start containers"
    delegate_to: localhost
    proxmox:
      api_host: "{{ prox_host }}"
      api_user: "{{ prox_user }}"
      api_password: "{{ prox_password }}"

      vmid: "{{ id }}"
      state: started

  - pause:
      seconds: 5

  when: check.stdout == "" # End block

### Verify
- name: "Verify containers are online"
  vars:
    ansible_user: root # Workaround
  wait_for_connection:
    timeout: 5
  retries: 5

- name: "Install SSH in Alpine"
  delegate_to: prox
  command: "pct exec {{ id }} {{ alpine_cmd }}"
  with_items:
  - 'apk update'
  - 'apk add openssh'
  - 'rc-update add sshd'
  - 'rc-status'
  - '/etc/init.d/sshd start'
  loop_control:
    loop_var: alpine_cmd # Avoid warning
  when: (id == 200) and (distro == "alpine")
  timeout: 5
  retries: 5

- name: "Add new SSH key to known hsots"
  delegate_to: localhost
  connection: local
  shell: "ssh-keyscan -H {{ ip }} >> ~/.ssh/known_hosts"
