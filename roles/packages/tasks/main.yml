- block:

  ### Prepare
  - name: "Use root user, until SSH is configured"
    set_fact:
      ansible_user: root

  - name: "Verify DNS & internet access with ping"
    command: "ping -c 2 example.com"
    register: ping
  - debug:
      var: ping.stdout

  - name: "Prepare list of packages to install"
    set_fact: # Default
      packages_to_install: "{{ required_packages }}"

  ### Update (Base template only)
  - block:
    - name: "Install updates"
      apt:
        upgrade: full
        update_cache: yes
      register: update
    - debug:
        var: update.stdout

    - name: "Append base packages to install list"
      set_fact:
        packages_to_install: "{{ base_packages + required_packages }}"

    when: inventory_hostname == "base"

  ### Install packages
  - name: "Gather package facts"
    package_facts:
      manager: auto
  - set_fact:
      missing_packages: false # Run every time

  - name: "Check if packages are already installed" # Looped to increase verbosity
    set_fact:
      missing_packages: true # Run on failure
    when: "pkg_to_check not in ansible_facts.packages"
    loop_control: # Avoid warnings from reusing "{{ item }}"
      loop_var: pkg_to_check
    with_items: "{{ packages_to_install }}"
    
  - name: "Install packages"
    apt:
      pkg: "{{ pkg_to_install }}"
    with_items: "{{ packages_to_install }}"
    loop_control: # Avoid warnings from reusing "{{ item }}"
      loop_var: pkg_to_install
    become: yes
    when: missing_packages == true

### Fail condition
  when: (inventory_hostname == "base") or (required_packages is defined)
