---
- name: "Deploy Pihole"
  hosts: pihole
  gather_facts: no
  vars:
    repo_dir: "/home/{{ user }}/pihole"
    repo_script: "{{ repo_dir }}/automated\\ install/basic-install.sh"
    answers_dir: "/etc/pihole"
    answers_file: "{{ answers_dir }}/setupVars.conf"
  tasks:

  - name: "Install prerequisites"
    apt:
      pkg: "{{ item }}"
      update_cache: yes
      state: present
    with_items: [curl,unzip,idn2,sqlite3,dns-root-data,netcat,lighttpd,
      php-common,php-cgi,php-sqlite3,php-xml,php-intl,php-json,git]
    become: yes

    ### Clone repo
  - name: "Clone pihole git repo"
    ansible.builtin.git:
      repo: "https://github.com/pi-hole/pi-hole.git"
      dest: "{{ repo_dir }}"
      depth: 1
      version: "v5.8.1" # Need specific release for line numbers in basic-install.sh
      force: yes # To override below modifications on re-runs

  - name: "Create /etc/pihole"
    file:
      path: "{{ answers_dir }}"
      state: directory
    become: yes
  - name: "Populate {{ answers_file }}"
    shell: |
      echo "IPV4_ADDRESS=172.26.0.161/24" > {{ answers_file }}
      echo "QUERY_LOGGING=true" >> {{ answers_file }}
      echo "INSTALL_WEB=true" >> {{ answers_file }}
      echo "PIHOLE_DNS_1=1.1.1.1" >> {{ answers_file }}
      echo "PIHOLE_DNS_2=1.0.0.1" >> {{ answers_file }}
      echo "DNSSEC=true" >> {{ answers_file }}
      echo "TEMPERATUREUNIT=C" >> {{ answers_file }}
    become: yes

  # - name: "Display {{ answers_file }}"
  #   command: "cat {{ answers_file }}"
  #   register: answers
  # - debug:
  #     var: answers.stdout

    # This is reeeaaally screwy,and changes with each pihole release
  - name: "Modify install script to remove interactivity"
    shell: |
      mv {{ repo_script }} {{ repo_script }}.bak
      echo "$(head -1953 {{ repo_script }}.bak)" > {{ repo_script }}
      echo "    useUpdateVars=true" >> {{ repo_script }}
      echo "$(tail -678 {{ repo_script }}.bak)" >> {{ repo_script }}

  - name: "Install Pihole"
    command: "bash {{ repo_script }}"
    become: yes
    register: install_pihole
  - debug:
      var: install_pihole.stdout

  - name: "Set password"
    command: "pihole -a -p {{ password }}"
    become: yes
    register: password
  - debug:
      var: password.stdout
  
  - name: "Verify webserver at http://{{ ansible_host }}/admin"
    wait_for:
      port: "{{ port }}"
    retries: 3
    delay: 3